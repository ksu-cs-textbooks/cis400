<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Committing Changes :: K-State CIS 400 Textbook</title><link>https://textbooks.cs.ksu.edu/cis400/b-git-workflows/05-commit/</link><description>As you modify your source code, either by editing existing files or creating new ones, youâ€™ll want to have git keep track of the changes.
Step 1 - Committing Changes To save your changes in git, you need to add any new files and then commit all new and edited files. To do this, you will typically want to use the commands:
$ git add . $ git commit -a -m "&lt;a message about the commit>"Additionally, you may want to push your changes to origin so that you can later pull them into other local repositories or turn in an assignment by creating a release.</description><generator>Hugo</generator><language>en-us</language><lastBuildDate/><atom:link href="https://textbooks.cs.ksu.edu/cis400/b-git-workflows/05-commit/index.xml" rel="self" type="application/rss+xml"/></channel></rss>
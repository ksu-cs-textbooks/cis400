<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Templates :: K-State CIS 400 Textbook</title><link>https://textbooks.cs.ksu.edu/cis400/2-desktop-development/02-element-tree/06-templates/</link><description>Most WPF controls are themselves composed of multiple, simpler, controls. For example, a &lt;Button> is composed of a &lt;Border> and whatever content you place inside the button. A simplified version of this structure appears below (I removed the styling information and the VisualState components responsible for presenting the button differently when it is enabled, disabled, hovered on, or clicked):
&lt;Border TextBlock.Foreground="{TemplateBinding Foreground}" x:Name="Border" CornerRadius="2" BorderThickness="1"> &lt;Border.BorderBrush> &lt;LinearGradientBrush StartPoint="0,0" EndPoint="0,1"> &lt;LinearGradientBrush.GradientStops> &lt;GradientStopCollection> &lt;GradientStop Color="{DynamicResource BorderLightColor}" Offset="0.</description><generator>Hugo</generator><language>en-us</language><lastBuildDate/><atom:link href="https://textbooks.cs.ksu.edu/cis400/2-desktop-development/02-element-tree/06-templates/index.xml" rel="self" type="application/rss+xml"/></channel></rss>
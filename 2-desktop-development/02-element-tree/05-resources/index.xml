<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Resources :: K-State CIS 400 Textbook</title><link>https://textbooks.cs.ksu.edu/cis400/2-desktop-development/02-element-tree/05-resources/</link><description>The &lt;Style> element represents just one kind of resource. We can provide other kinds of resources, like raw data. Say we want to provide a string to display in our program, but want that string declared somewhere easy to find and change (perhaps our customers change their mind frequently). We could declare the string in the Application resources:
&lt;Application x:Class="WpfTutorialSamples.App" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:sys="clr-namespace:System;assembly=mscorlib" StartupUri="WPF application/ExtendedResourceSample.xaml"> &lt;Application.Resources> &lt;sys:String x:Key="StringToDisplay">Hello World!&lt;/sys:String> &lt;/Application.Resources> &lt;/Application>Then, in our actual control we can use that string as a static resource:</description><generator>Hugo</generator><language>en-us</language><lastBuildDate/><atom:link href="https://textbooks.cs.ksu.edu/cis400/2-desktop-development/02-element-tree/05-resources/index.xml" rel="self" type="application/rss+xml"/></channel></rss>
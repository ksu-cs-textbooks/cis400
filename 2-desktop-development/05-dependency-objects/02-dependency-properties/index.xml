<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Dependency Properties :: K-State CIS 400 Textbook</title><link>https://textbooks.cs.ksu.edu/cis400/2-desktop-development/05-dependency-objects/02-dependency-properties/</link><description>Perhaps the most important aspect of the DependencyObject is its support for hosting dependency properties. While these appear and can be used much like the C# properties we have previously worked with, internally they are managed very differently. Consider when we place a &lt;TextBox> in a &lt;Grid>:
&lt;Grid> &lt;Grid.ColumnDefinitions> &lt;ColumnDefinition/> &lt;ColumnDefinition/> &lt;/Grid.ColumnDefinitions> &lt;Grid.RowDefinitions> &lt;RowDefinition/> &lt;RowDefinition/> &lt;/Grid.RowDefinitions> &lt;TextBox Name="textBox" Grid.Column="1" Grid.Row="1"/> &lt;/Grid>Where do the Column and Row properties come from? They arenâ€™t defined on the TextBox class - you can check the documentation.</description><generator>Hugo</generator><language>en-us</language><lastBuildDate/><atom:link href="https://textbooks.cs.ksu.edu/cis400/2-desktop-development/05-dependency-objects/02-dependency-properties/index.xml" rel="self" type="application/rss+xml"/></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>C# Properties :: K-State CIS 400 Textbook</title><link>https://textbooks.cs.ksu.edu/cis400/1-object-orientation/01-objects/07-csharp-properties/</link><description>While accessor methods provide a powerful control mechanism in object-oriented languages, they also require a lot of typing the same code syntax over and over (we often call this boilerplate). Many languages therefore introduce a mechanism for quickly defining basic accessors. In C#, we have Properties. Letâ€™s rewrite our Student class with Properties:
public class Student { private string _first; /// &lt;summary>The student's first name&lt;/summary> public string First { get { return _first; } set { if(value.</description><generator>Hugo</generator><language>en-us</language><lastBuildDate/><atom:link href="https://textbooks.cs.ksu.edu/cis400/1-object-orientation/01-objects/07-csharp-properties/index.xml" rel="self" type="application/rss+xml"/></channel></rss>
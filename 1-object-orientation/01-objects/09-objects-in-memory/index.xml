<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Objects in Memory :: K-State CIS 400 Textbook</title><link>https://textbooks.cs.ksu.edu/cis400/1-object-orientation/01-objects/09-objects-in-memory/</link><description>We often talk about the class as a blueprint for an object. This is because classes define what properties and methods an object should have, in the form of the class definition. An object is created from this blueprint by invoking the classâ€™ constructor. Consider this class representing a planet:
/// &lt;summary> /// A class representing a planet // &lt;/summary> public class Planet { /// &lt;summary> /// The planet's mass in Earth Mass units (~5.</description><generator>Hugo</generator><language>en-us</language><lastBuildDate/><atom:link href="https://textbooks.cs.ksu.edu/cis400/1-object-orientation/01-objects/09-objects-in-memory/index.xml" rel="self" type="application/rss+xml"/></channel></rss>
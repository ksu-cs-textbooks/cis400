<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Summary :: K-State CIS 400 Textbook</title><link>https://textbooks.cs.ksu.edu/cis400/1-object-orientation/01-objects/12-summary/</link><description>In this chapter, we looked at how Object-Orientation adopted the concept of encapsulation to combine related state and behavior within a single unit of code, known as a class. We also discussed the three key features found in the implementation of classes and objects in Object-Oriented languages:
Encapsulation of state and behavior within an object, defined by its class Information hiding applied to variables defined within that class to prevent unwanted mutations of object state Message passing to allow controlled mutations of object state in well-defined ways We explored how objects are instances of a class created through invoking a constructor method, and how each object has its own independent state but shares behavior definitions with other objects constructed from the same class.</description><generator>Hugo</generator><language>en-us</language><lastBuildDate/><atom:link href="https://textbooks.cs.ksu.edu/cis400/1-object-orientation/01-objects/12-summary/index.xml" rel="self" type="application/rss+xml"/></channel></rss>